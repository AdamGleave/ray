# An unique identifier for the head node and workers of this cluster.
cluster_name: sgd-tf

# The maximum number of workers nodes to launch in addition to the head
# node. This takes precedence over min_workers. min_workers default to 0.
min_workers: 3
initial_workers: 3
max_workers: 3

target_utilization_fraction: 0.9

# If a node is idle for this many minutes, it will be removed.
idle_timeout_minutes: 20
# docker:
#     image: tensorflow/tensorflow:1.5.0-py3
#     container_name: ray_docker

# Cloud-provider specific configuration.
provider:
    type: aws
    region: us-east-1
    availability_zone: us-east-1e

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu

head_node:
    InstanceType: g3.8xlarge
    ImageId: ami-0757fc5a639fe7666
    #    InstanceMarketOptions:
    #        MarketType: spot
    #        SpotOptions:
    #            MaxPrice: "9.0"


worker_nodes:
    InstanceType: g3.8xlarge
    ImageId: ami-0757fc5a639fe7666
    # InstanceMarketOptions:
    #     MarketType: spot
        # SpotOptions:
        #     MaxPrice: "9.0"

    #     # Run workers on spot by default. Comment this out to use on-demand.
    #     InstanceMarketOptions:
    #         MarketType: spot

node_setup_commands:
    common:
        - conda install setuptools=41.0.1=py36_0 wrapt=1.11.2 --yes # workaround to fix wrapt error
        - ray || pip install -U https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-0.8.0.dev3-cp36-cp36m-manylinux1_x86_64.whl
        - pip install -U ipdb ray[rllib]
        - pip install tensorflow==2.0.0-rc0

file_mounts: {
}

# Commands to start Ray on the nodes. You do not need to change this.
ray_restart_commands:
    common:
        - ray stop
    head:
        - ray start --head --redis-port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --object-store-memory=1000000000
    worker:
        - ray start --redis-address=$RAY_HEAD_IP:6379 --object-manager-port=8076 --object-store-memory=1000000000
